name: SonarCloud Scan

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarcloud-go:
    runs-on: ubuntu-latest
    name: Analyze Go Project

    steps:
    - uses: actions/checkout@v2

    - name: Set up Java 17
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Cache SonarCloud packages
      uses: actions/cache@v2
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar-${{ hashFiles('**/*.lock') }}
        restore-keys: |
          ${{ runner.os }}-sonar

    - name: Install SonarScanner
      run: |
        curl -sSLo sonar-scanner-cli.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip
        unzip sonar-scanner-cli.zip
        export PATH="$PATH:$(pwd)/sonar-scanner-4.7.0.2747-linux/bin"

    - name: Run SonarCloud analysis for Go
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_BACKEND }}
        PATH: ${{ env.PATH }}:$(pwd)/sonar-scanner-4.7.0.2747-linux/bin
      run: |
        cd Zadanie_4_Go
        go mod tidy
        sonar-scanner \
          -Dsonar.projectKey=mikolaj-sujka_ebiznes \
          -Dsonar.sources=. \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=${{ secrets.SONAR_TOKEN_BACKEND }}

  sonarcloud-frontend:
    runs-on: ubuntu-latest
    name: Analyze Frontend Project

    steps:
    - uses: actions/checkout@v2

    - name: Set up Java 17
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '14'

    - name: Cache Node modules
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node

    - name: Install SonarScanner
      run: |
        curl -sSLo sonar-scanner-cli.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip
        unzip sonar-scanner-cli.zip
        export PATH="$PATH:$(pwd)/sonar-scanner-4.7.0.2747-linux/bin"

    - name: Run SonarCloud analysis for Frontend
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FRONTEND }}
        PATH: ${{ env.PATH }}:$(pwd)/sonar-scanner-4.7.0.2747-linux/bin
      run: |
        cd Zadanie_5_Frontend
        npm install
        ./sonar-scanner-4.7.0.2747-linux/bin/sonar-scanner \
          -Dsonar.projectKey=mikolaj-sujka_ebiznes \
          -Dsonar.sources=. \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=${{ secrets.SONAR_TOKEN_FRONTEND }}
